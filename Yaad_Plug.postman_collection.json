{
	"info": {
		"_postman_id": "62766ecf-775b-44af-b7b5-bebc5284f424",
		"name": "Yaad Plug",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "28928104"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "User Sign UP",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Test",
									"type": "text"
								},
								{
									"key": "email",
									"value": "manishkrpandit@ibarts.in",
									"type": "text"
								},
								{
									"key": "password",
									"value": "qwerty",
									"type": "text"
								},
								{
									"key": "type",
									"value": "email",
									"type": "text"
								},
								{
									"key": "profileImage",
									"type": "file",
									"src": "/C:/Users/PC-17/Desktop/img/freestocks-9UVmlIb0wJU-unsplash.jpg"
								}
							]
						},
						"url": "{{baseUrl}}/api/auth/signup"
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields - status and msg\", function () {\r",
									"  pm.expect(pm.response.json()).to.be.an('object').that.has.all.keys('status', 'msg');\r",
									"});\r",
									"\r",
									"pm.test(\"Error message is not empty\", function () {\r",
									"  pm.expect(pm.response.json().err).to.exist.and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Content type is application/json\", function () {\r",
									"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status field is a non-negative integer\", function () {\r",
									"  pm.expect(pm.response.json().status).to.be.a('number').and.to.be.at.least(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin@gmail.com\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/auth/signinAdmin"
					},
					"response": []
				},
				{
					"name": "User Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "//user ---------------\r\n// {\r\n//     \"email\": \"nike@gmail.com\",\r\n//     \"password\": \"qwerty\"\r\n// }\r\n\r\n// rider ------------\r\n{\r\n    \"email\": \"manishkrpandit@ibarts.in\",\r\n    \"password\": \"qwerty\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/auth/signin"
					},
					"response": []
				},
				{
					"name": "Google Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"googleAuth\": {\r\n        \"accessToken\": \"ya29.a0AfB_byCxJ_UFT-giYSfHNo-vvdguz3w3t1zKqm4Po3hkbEJgSH79u-Exn2tQjFAHijOSYlLm53s9o_EcD2MjHXRJeVcY9wrOtBtkgT5Nc_qz5sXkhoidzbub9AGEJb547msr4KdPGpzEWMrMCwPunHXq1TWXj9KMZwaCgYKAa8SARESFQHGX2MiOVM4oR9mjUdsw4Kib-4B1Q0169\",\r\n    \"idToken\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkYzRlMTA5ODE1ZjQ2OTQ2MGU2M2QzNGNkNjg0MjE1MTQ4ZDdiNTkiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiI3MDQzNDAwNTk0OTQtZ3Y3NzA5OHFpdTQzZHIxMzE1dXJkMzF2aWQ2bTFmbG8uYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiI3MDQzNDAwNTk0OTQtYmY2N3F0MGw1bXM1a3BuZGFkNWxjZGozaXBjZzQxMDcuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMDYxNTgyNzc4NzM1MTk0MTYyNDUiLCJlbWFpbCI6ImFkdHlheWFkYXY3NTlAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsIm5hbWUiOiJBZGl0eWEgWWFkYXYiLCJwaWN0dXJlIjoiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnlpRUpEaEhGMnJtZ2pDTDk2a2Y4T1ZnZjJwQk5yclE2SUFIRjY0QUdTPXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IkFkaXR5YSIsImZhbWlseV9uYW1lIjoiWWFkYXYiLCJsb2NhbGUiOiJlbi1HQiIsImlhdCI6MTcwNzIxMTE0NiwiZXhwIjoxNzA3MjE0NzQ2fQ.l883eLKpVMYB7BflgoKoWBPKbT9nCDWNcFhYzXbliLfsBnJj1lwRUTCkI4t5Z44vgOl9Z_1o8dWhMM98IiC2HHpdI8B2cspvfjfdm9FvSZ24I_8Jz6jcqIbR_uWrcG5eIm8eoDYjy1OrZaYqw4V1se62RzeqJNa5qqUIqWGM0tNZGqci6s6Pv01rTn00DLinJo3E075TbP9653hw47lFZxUZK5wyjSJql0Inx8BQljG7kXTSgngxwLibjPbTFLP1eJELvm3_oPr-erY7xFjR1sbVwqZikMs9T6wLKBC6S2ZIBt1ex1BMi32ErX94tEDDW5KfAEOlLSzX5bHIZgDxvw\"\r\n    },\r\n    \"googleUser\": {\r\n        \"displayName\": \"Aditya rai\",\r\n        \"email\": \"adtyadffffrfdegbvbfsd@gmail.com\",\r\n        \"id\": \"106158277873519416245\",\r\n        \"photoUrl\": \"https://lh3.googleusercontent.com/a/ACg8ocJyiEJDhHF2rmgjCL96kf8OVgf2pBNrrQ6IAHF64AGS=s96-c\"\r\n    },\r\n  \"type\": \"google\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/auth/google"
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer",
			"item": [
				{
					"name": "Meals",
					"item": [
						{
							"name": "Search Meal",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/customers/meals/search?query=ayaan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"customers",
										"meals",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "ayaan"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Meals",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/customers/meals"
							},
							"response": []
						},
						{
							"name": "Get Meal by meal Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/customers/meals/:mealId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"customers",
										"meals",
										":mealId"
									],
									"variable": [
										{
											"key": "mealId",
											"value": "55"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Orders",
					"item": [
						{
							"name": "Place Order",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{UserAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userId\": 1,\r\n    \"orders\": [\r\n        {\r\n            \"mealId\": 10,\r\n            \"quantity\": 2\r\n        }\r\n    ],\r\n    \"totalAmount\":233,\r\n    \"deliveryAddress\": \"ABCDE ROAD, KOlkata-6000\",\r\n    \"latLong\": {\r\n         \"lat\": 37.40251822157583,\r\n        \"long\": -122.0775110353\r\n    },\r\n    \"tax\": {\r\n         \"percentage\": 5,\r\n        \"amount\": 100\r\n    },\r\n    \"orderPrice\": 300.02,\r\n    \"platformFee\":3,\r\n    \"deliveryPartnerFee\":20,\r\n    \"tip\":10\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/customers/orders/place"
							},
							"response": []
						},
						{
							"name": "Get All orders By UserId",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{UserAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userId\":66\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/customers/orders"
							},
							"response": []
						},
						{
							"name": "Get Order By orderId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/customers/orders/:orderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"customers",
										"orders",
										":orderId"
									],
									"variable": [
										{
											"key": "orderId",
											"value": "22"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Orders",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"orderId\":17,\r\n    \"comments\":\"Order made by mistake\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/customers/orders/cancel"
							},
							"response": []
						}
					]
				},
				{
					"name": "Profiles",
					"item": [
						{
							"name": "Get Profile By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/customers/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"customers",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Profile",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Manish Kumar",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/customers/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"customers",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "67"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Profile",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/customers/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"customers",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "64"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Categories",
					"item": [
						{
							"name": "Get Categories List",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/customers/meals/categories"
							},
							"response": []
						},
						{
							"name": "Filter meals by category",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"category\": \"Side Dishes\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/customers/meals/categories/filter"
							},
							"response": []
						},
						{
							"name": "Get Combo Meals",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"category\": \"Combo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/customers/meals/categories/filter"
							},
							"response": []
						}
					]
				},
				{
					"name": "Freight",
					"item": [
						{
							"name": "Create Freight",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "pickupLocation",
											"value": "Jharkhand",
											"type": "text"
										},
										{
											"key": "dropLocation",
											"value": "Bihar",
											"type": "text"
										},
										{
											"key": "dateTime",
											"value": "Wednesday, 28 Feb 2024 10:00 AM",
											"type": "text"
										},
										{
											"key": "description",
											"value": "lorem ipsum",
											"type": "text"
										},
										{
											"key": "packageSize",
											"value": "Large Package",
											"type": "text"
										},
										{
											"key": "options",
											"value": "Door-to-door",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "/C:/Users/PC-15/Downloads/image (3).png"
										},
										{
											"key": "offerFare",
											"value": "80.55",
											"type": "text"
										}
									]
								},
								"url": "{{baseUrl}}/api/customers/freight/2"
							},
							"response": []
						},
						{
							"name": "Fetch Freight Details By UserId",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/customers/freight/1"
							},
							"response": []
						}
					]
				},
				{
					"name": "Forget Password",
					"item": [
						{
							"name": "Request OTP",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"manishkrpandit@ibarts.in\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/customers/request-otp"
							},
							"response": []
						},
						{
							"name": "Verify OTP",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"manishkrpandit@ibarts.in\",\r\n    \"otp\":388792\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/customers/verify-otp"
							},
							"response": []
						},
						{
							"name": "Reset Password",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"resetToken\":\"64f0b47fea3fedecc4065337680cc088321edf9e057a9eac339af0f1cf0b618b\",\r\n    \"newPassword\":\"qwerty1\",\r\n    \"confirmPassword\":\"qwerty1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/customers/reset-password"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Meals",
					"item": [
						{
							"name": "Get ALL Meals",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = `\r",
											"<style type=\"text/css\">\r",
											"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
											"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
											"    .tftable tr {background-color:#ffffff;}\r",
											"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
											"    .tftable tr:hover {background-color:#e0ffff;}\r",
											"</style>\r",
											"\r",
											"<table class=\"tftable\" border=\"1\">\r",
											"    <tr>\r",
											"        <th>ID</th>\r",
											"        <th>Name</th>\r",
											"        <th>Description</th>\r",
											"        <th>Price</th>\r",
											"        <th>Category</th>\r",
											"        <th>Image URL</th>\r",
											"        <th>Ingredients</th>\r",
											"        <th>Vegetarian</th>\r",
											"        <th>Spicy</th>\r",
											"        <th>Created At</th>\r",
											"        <th>Updated At</th>\r",
											"    </tr>\r",
											"    \r",
											"    {{#each response.meals}}\r",
											"        <tr id=row_{{@key}}>\r",
											"            <td>{{id}}</td>\r",
											"            <td>{{name}}</td>\r",
											"            <td>{{description}}</td>\r",
											"            <td>{{price}}</td>\r",
											"            <td>{{category}}</td>\r",
											"            <td>{{imageUrl}}</td>\r",
											"            <td>{{ingredients}}</td>\r",
											"            <td>{{isVegetarian}}</td>\r",
											"            <td>{{isSpicy}}</td>\r",
											"            <td>{{createdAt}}</td>\r",
											"            <td>{{updatedAt}}</td>\r",
											"        </tr>\r",
											"    {{/each}}\r",
											"</table>\r",
											"`;\r",
											"\r",
											"function constructVisualizerPayload() {\r",
											"    return {response: pm.response.json()}\r",
											"}\r",
											"\r",
											"pm.visualizer.set(template, constructVisualizerPayload());\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type header is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"IsVegetarian and IsSpicy fields are boolean for each meal\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.meals).to.be.an('array');\r",
											"    responseData.meals.forEach(function(meal) {\r",
											"        pm.expect(meal.isVegetarian).to.be.a('boolean');\r",
											"        pm.expect(meal.isSpicy).to.be.a('boolean');\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/meals"
							},
							"response": []
						},
						{
							"name": "List of meals",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = `\r",
											"<style type=\"text/css\">\r",
											"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
											"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
											"    .tftable tr {background-color:#ffffff;}\r",
											"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
											"    .tftable tr:hover {background-color:#e0ffff;}\r",
											"</style>\r",
											"\r",
											"<table class=\"tftable\" border=\"1\">\r",
											"    <tr>\r",
											"        <th>ID</th>\r",
											"        <th>Name</th>\r",
											"        <th>Description</th>\r",
											"        <th>Price</th>\r",
											"        <th>Category</th>\r",
											"        <th>Image URL</th>\r",
											"        <th>Ingredients</th>\r",
											"        <th>Vegetarian</th>\r",
											"        <th>Spicy</th>\r",
											"        <th>Created At</th>\r",
											"        <th>Updated At</th>\r",
											"    </tr>\r",
											"    \r",
											"    {{#each response.meals}}\r",
											"        <tr id=row_{{@key}}>\r",
											"            <td>{{id}}</td>\r",
											"            <td>{{name}}</td>\r",
											"            <td>{{description}}</td>\r",
											"            <td>{{price}}</td>\r",
											"            <td>{{category}}</td>\r",
											"            <td>{{imageUrl}}</td>\r",
											"            <td>{{ingredients}}</td>\r",
											"            <td>{{isVegetarian}}</td>\r",
											"            <td>{{isSpicy}}</td>\r",
											"            <td>{{createdAt}}</td>\r",
											"            <td>{{updatedAt}}</td>\r",
											"        </tr>\r",
											"    {{/each}}\r",
											"</table>\r",
											"`;\r",
											"\r",
											"function constructVisualizerPayload() {\r",
											"    return {response: pm.response.json()}\r",
											"}\r",
											"\r",
											"pm.visualizer.set(template, constructVisualizerPayload());\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type header is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"IsVegetarian and IsSpicy fields are boolean for each meal\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.meals).to.be.an('array');\r",
											"    responseData.meals.forEach(function(meal) {\r",
											"        pm.expect(meal.isVegetarian).to.be.a('boolean');\r",
											"        pm.expect(meal.isSpicy).to.be.a('boolean');\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/meals-list"
							},
							"response": []
						},
						{
							"name": "Get Meal by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/meals/:mealId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"meals",
										":mealId"
									],
									"variable": [
										{
											"key": "mealId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Meal details by Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"New Chicken Parmesan\", \r\n  \"price\": 16.99,\r\n  \"isSpicy\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admins/meals/:mealId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"meals",
										":mealId"
									],
									"variable": [
										{
											"key": "mealId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Meal By Id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/meals/:mealId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"meals",
										":mealId"
									],
									"variable": [
										{
											"key": "mealId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add new meal",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "6548548554",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Juicy grilled salmon with lemon and herbs.",
											"type": "text"
										},
										{
											"key": "price",
											"value": "564565456",
											"type": "text"
										},
										{
											"key": "category",
											"value": "Main Course",
											"type": "text"
										},
										{
											"key": "ingredients[0]",
											"value": "Salmon",
											"type": "text"
										},
										{
											"key": "ingredients[1]",
											"value": "Lemon",
											"type": "text"
										},
										{
											"key": "ingredients[2]",
											"value": "Herbs",
											"type": "text"
										},
										{
											"key": "isVegetarian",
											"value": "True",
											"type": "text"
										},
										{
											"key": "isSpicy",
											"value": "True",
											"type": "text"
										},
										{
											"key": "mealImage",
											"type": "file",
											"src": "/C:/Users/PC-17/Desktop/img/michael-dam-mEZ3PoFGs_k-unsplash.jpg"
										}
									]
								},
								"url": "{{baseUrl}}/api/admins/meals"
							},
							"response": []
						}
					]
				},
				{
					"name": "Meal Orders Management",
					"item": [
						{
							"name": "Accept order and assigned rider and estimated time",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"orderId\": 4,\r\n    \"riderId\": 19,\r\n    \"estimatedTime\":30\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/admins/meal-orders"
							},
							"response": []
						},
						{
							"name": "List of all orders received",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/meal-orders"
							},
							"response": []
						},
						{
							"name": "Update Order Status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\":\"Preparing\"\r\n    // \"comments\":\"qwertyuiiiiiiiiiiiiiiio;\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/admins/meal-orders/1"
							},
							"response": []
						},
						{
							"name": "Get Order Details by id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/meal-orders/:mealOrderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"meal-orders",
										":mealOrderId"
									],
									"variable": [
										{
											"key": "mealOrderId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter Orders by status (pending/approved/delivered/shipped)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/meal-orders-filter?status=Pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"meal-orders-filter"
									],
									"query": [
										{
											"key": "status",
											"value": "Pending"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Available Rider List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/riders/available"
							},
							"response": []
						},
						{
							"name": "Meal orders tracking",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/meal-orders-tracking"
							},
							"response": []
						}
					]
				},
				{
					"name": "User Management",
					"item": [
						{
							"name": "List of all Users",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/users"
							},
							"response": []
						},
						{
							"name": "Delete or disable user",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/users/1"
							},
							"response": []
						},
						{
							"name": "Get User Details By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/users/5"
							},
							"response": []
						},
						{
							"name": "Get user by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/users/5"
							},
							"response": []
						}
					]
				},
				{
					"name": "Rider Management",
					"item": [
						{
							"name": "Get All Riders",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/riders"
							},
							"response": []
						},
						{
							"name": "Update Rider availability / name / contact details",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Updated Rider Name\",\r\n  \"availability\": true,\r\n  \"contactDetails\": \"Updated Contact Information\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/admins/riders/1"
							},
							"response": []
						},
						{
							"name": "Remove Rider By Id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/riders/1"
							},
							"response": []
						},
						{
							"name": "Search Rider By Name or Availability",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/riders/search?name=zzz",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"riders",
										"search"
									],
									"query": [
										{
											"key": "name",
											"value": "zzz"
										},
										{
											"key": "availability",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Raiders",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"New Raider\",\r\n  \"availability\": true,\r\n  \"contactDetails\": \"8688-46554-566-4\",\r\n  \"vehiclePlateNumber\": 454888,\r\n  \"licensePlateNumber\": \"ABC789\",\r\n  \"email\":\"rider1@yaad.com\",\r\n  \"password\":\"qwerty\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/admins/riders"
							},
							"response": []
						}
					]
				},
				{
					"name": "Combo",
					"item": [
						{
							"name": "Get All Combo",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/combos"
							},
							"response": []
						},
						{
							"name": "Create Combo",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Special Combo 2\",\r\n  \"description\": \"A special combo featuring a variety of delicious meals.\",\r\n  \"price\": 29.99,\r\n  \"meals\": [\r\n    {\r\n      \"mealId\": 1,\r\n      \"quantity\": 1\r\n    },\r\n    {\r\n      \"mealId\": 2,\r\n      \"quantity\": 2\r\n    },\r\n    {\r\n      \"mealId\": 3,\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/admins/combos"
							},
							"response": []
						},
						{
							"name": "Update Combo By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Updated Combo Name\",\r\n  \"price\": 19.99, \r\n  \"description\": \"Updated combo description\",\r\n  \"meals\": [\r\n    {\r\n      \"mealId\": 1, \r\n      \"quantity\": 2 \r\n    },\r\n    {\r\n      \"mealId\": 2, \r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admins/combos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"combos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Combo By Id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/combos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"combos",
										":id"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Combo By Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/combos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"combos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Combo",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/combos/search?description=combo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"combos",
										"search"
									],
									"query": [
										{
											"key": "name",
											"value": "Updated",
											"disabled": true
										},
										{
											"key": "price",
											"value": "25.99",
											"disabled": true
										},
										{
											"key": "description",
											"value": "combo"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Meal Combo",
					"item": [
						{
							"name": "Get All Meal Combo",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/mealcombos"
							},
							"response": []
						},
						{
							"name": "Get Meal Combo By Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/mealcombos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"mealcombos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Meal Combo By Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/mealcombos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"mealcombos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Meal Combo By Id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admins/mealcombos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admins",
										"mealcombos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Categories",
					"item": [
						{
							"name": "List  Of Categories",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/categories"
							},
							"response": []
						},
						{
							"name": "Add Category",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Combo",
											"type": "text"
										},
										{
											"key": "categoryImage",
											"type": "file",
											"src": "/C:/Users/PC-17/Desktop/img/aron-van-de-pol-hXOGHaGCtdA-unsplash - Copy.jpg",
											"disabled": true
										},
										{
											"key": "description",
											"value": " consists of beverage and food combined",
											"type": "text"
										}
									]
								},
								"url": "{{baseUrl}}/api/admins/categories"
							},
							"response": []
						}
					]
				},
				{
					"name": "Freight",
					"item": [
						{
							"name": "Get List of request",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/admins/freight"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Rider",
			"item": [
				{
					"name": "Profile",
					"item": [
						{
							"name": "Get Profile",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"riderId\":9\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/riders"
							},
							"response": []
						},
						{
							"name": "Update Profile",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "riderId",
											"value": "19",
											"type": "text"
										},
										{
											"key": "profileImage",
											"type": "file",
											"src": "/C:/Users/PC-17/Desktop/img/user4.jpg"
										},
										{
											"key": "data",
											"value": "{\"name\":\"shiv\"}",
											"type": "text"
										}
									]
								},
								"url": "{{baseUrl}}/api/riders"
							},
							"response": []
						}
					]
				},
				{
					"name": "Order",
					"item": [
						{
							"name": "Get Delivered Order List",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"riderId\":2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/riders/orders-delivered"
							},
							"response": []
						},
						{
							"name": "Update Status",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"orderId\": 1,\r\n    \"status\": \"Rejected\",\r\n    \"riderId\": 9,\r\n    \"riderLatLong\": {\r\n        \"lat\": 1.222,\r\n        \"long\": 1.5255\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/riders/orders"
							},
							"response": []
						},
						{
							"name": "Get Assigned Orders",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"riderId\":9\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/riders/orders"
							},
							"response": []
						}
					]
				}
			]
		}
	]
}